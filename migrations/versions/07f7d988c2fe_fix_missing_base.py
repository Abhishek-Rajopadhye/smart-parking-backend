"""Fix missing Base

Revision ID: 07f7d988c2fe
Revises: 219b3e02b6b6
Create Date: 2025-03-24 11:49:04.001774

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '07f7d988c2fe'
down_revision: Union[str, None] = '219b3e02b6b6'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_bookings_id', table_name='bookings')
    op.drop_table('bookings')
    op.drop_table('spots')
    op.drop_index('ix_payments_id', table_name='payments')
    op.drop_table('payments')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('payments',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('payments_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('spot_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('amount', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('razorpay_order_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('razorpay_payment_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('razorpay_signature', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='payments_pkey'),
    sa.UniqueConstraint('razorpay_order_id', name='payments_razorpay_order_id_key'),
    sa.UniqueConstraint('razorpay_payment_id', name='payments_razorpay_payment_id_key'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_payments_id', 'payments', ['id'], unique=False)
    op.create_table('spots',
    sa.Column('spot_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('owner_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('available_slots', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('total_slots', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('spot_id', name='spots_pkey')
    )
    op.create_table('bookings',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('spot_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('total_slots', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('start_date_time', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('end_date_time', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('payment_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['payment_id'], ['payments.id'], name='bookings_payment_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='bookings_pkey')
    )
    op.create_index('ix_bookings_id', 'bookings', ['id'], unique=False)
    # ### end Alembic commands ###
